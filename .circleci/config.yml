version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5
    working_directory: ~/app
    steps:
      - run:
          name: Update Debian Packages
          command: |
            # Jessie backports fix from https://discuss.circleci.com/t/apt-get-update-return-404/29237/4
            sudo rm /etc/apt/sources.list
            echo "deb http://archive.debian.org/debian/ jessie-backports main" | sudo tee -a /etc/apt/sources.list
            echo "deb-src http://archive.debian.org/debian/ jessie-backports main" | sudo tee -a /etc/apt/sources.list
            echo "Acquire::Check-Valid-Until false;" | sudo tee -a /etc/apt/apt.conf.d/10-nocheckvalid
            echo 'Package: *\nPin: origin "archive.debian.org"\nPin-Priority: 500' | sudo tee -a /etc/apt/preferences.d/10-archive-pin
            sudo apt-get update -qq
            sudo apt-get upgrade -qq
            sudo apt-get install -y -f software-properties-common build-essential default-libmysqlclient-dev nodejs make apt-utils cmake
            sudo apt-get install -t jessie-backports -y openjdk-8-jre-headless ca-certificates-java
            sudo apt-get install -y openjdk-8-jre openjdk-8-jdk openjdk-8-jdk-headless
            sudo update-alternatives --config java

      - run:
          name: phantomjs
          command: |
            sudo wget -P /opt/phantomjs/ https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
            sudo bzip2 -d /opt/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2
            sudo tar -xvf /opt/phantomjs/phantomjs-2.1.1-linux-x86_64.tar -C /opt/phantomjs
            sudo cp /opt/phantomjs/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/phantomjs

      - checkout
      - restore_cache:
          key: gemfile-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Ruby Dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3

      - save_cache:
          key: gemfile-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
            - tmp/zips

      - run:
          name: Start blazegraph
          command: bundle exec rake triplestore_adapter:blazegraph:reset

      - run:
          name: Create DB          
          command: bundle exec rake db:create db:migrate db:test:prepare

      - run:
          name: Run Tests
          command: |
            bundle exec rspec --profile 10 \
                              --format documentation \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_artifacts:
          path: coverage
          destination: coverage
      - store_test_results:
          path: /tmp/circle-junit

